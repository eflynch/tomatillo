#!/usr/bin/env python3

import os
import argparse
import time
import subprocess


def main():
    resource_path = os.path.abspath(
        os.path.join(os.path.dirname(os.path.realpath(__file__)), "resources"))
    music_player = "afplay"

    parser = argparse.ArgumentParser(description="Pomodoro Clock")
    parser.add_argument("-s", "--silent", action='store_true', default=False, help="Silence bells")
    parser.add_argument("-t", "--time-scale", type=int, default=60,
                        help="Set duration of basic time unit")
    parser.add_argument("-w", "--work-dur", type=int, default=25, help="Set length of work period")
    parser.add_argument("-b", "--break-dur", type=int, default=5,
                        help="Set length of break period")
    parser.add_argument("-r", "--rest-dur", type=int, default=25, help="Set length of rest period")
    parser.add_argument("-f", "--rest-freq", type=int, default=4,
                        help="Set number of work periods per rest")

    args = parser.parse_args()

    def segment(sound, duration):
        print(sound)
        subprocess.Popen([music_player, os.path.join(resource_path, sound + ".mp3")])
        time.sleep(args.time_scale * duration)

    work_index = 0
    working = False

    while True:
        if work_index < args.rest_freq:
            if working:
                segment("break", args.break_dur)
                working = False
            else:
                segment("work", args.work_dur)
                work_index += 1
                working = True
        else:
            segment("rest", args.rest_dur)
            work_index = 0
            working = False


if __name__ == "__main__":
    main()
