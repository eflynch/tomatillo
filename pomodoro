#!/bin/bash
path_to_sounds=~/bin/resources/
music_player=afplay

# Defaults
sound=true
ticking=false
minute_length=60
work_length=25
work_number=4
break_length=5
rest_length=25
usage="usage: pomodoro [-hstc] [-m time] [-w time] [-b time] [-r time] [-W number]
where:
    -h  show this help text
    -s  silence bells
    -t  ticking enabled
    -c  run in clock mode
    -m  set length of base time unit        (default: 60 seconds)
    -w  set length of work period           (default: 25 base units)
    -b  set length of break period          (default: 5 base units)
    -r  set length of rest period           (default: 25 base units)
    -W  set number of work periods per rest (default: 4)"

while getopts :shm:w:W:b:r:tc option; do
    case "$option" in
        s)  sound=false;;
        m)  minute_length=${OPTARG} ;;
        w)  work_length=${OPTARG} ;;
        b)  break_length=${OPTARG} ;;
        r)  rest_length=${OPTARG} ;;
        W)  work_number=${OPTARG} ;;
        h)  echo "$usage"; exit 0 ;;
        c)  minute_length=1; work_length=1500; break_length=300; rest_length=1500 ;;
        t)  ticking=true ;;
        :)  printf "missing argument for -%s\n" "${OPTARG}" >&2
            echo "$usage" >&2
            exit 1
            ;;
        \?) printf "illegal option: -%s\n" "${OPTARG}" >&2
            echo "$usage" >&2
            exit 1
            ;;
    esac
done

play_tick() {
    if $sound; then
        sound=${path_to_sounds}tick.wav
        eval "$music_player $sound" 
    fi
}

play_sound(){
    if $sound; then
        case "$1" in
            "work")
                sound=$path_to_sounds/bell4.wav
                ;;
            "break")
                sound=$path_to_sounds/bell4.wav
                ;;
            *)
                sound=$path_to_sounds/bowl-struck.wav
                ;;
        esac
        eval "$music_player $sound"
    fi
}

timer(){
    play_sound $1 &
    echo -e "\r$1"
    for i in $(seq 0 $2)
    do
        let "m = $2 - $i"; echo -en "\r\033[K$m"
        if (( i != 0)); then
            if $ticking; then
                play_tick &
            fi
        fi
        sleep $minute_length
    done
}

tput civis
trap '{ tput cnorm;  exit 1; }' INT #Note that this is a hack!
while [[ 1 -eq 1 ]] ; do
    if (( $work_number > 1)); then
        for i in $(seq 2 $work_number); do
            timer "work" $work_length
            timer "break" $break_length
        done
    fi
    timer "work" $work_length
    timer "rest" $rest_length
done
